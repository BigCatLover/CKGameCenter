//构建类型
//通过apply from '路径'
// 在别的gradle中引入，会替换对应的配置
//如果在宿主gradle中有配置某一属性是覆盖不了的
ext {
    //Get cp code from assets/cp;
    Properties prop = new Properties();
    FileInputStream fileInputStream = new FileInputStream(file('../local.properties'));
    DataInputStream dInput = new DataInputStream(fileInputStream);
    prop.load(dInput);
    //def appKey = prop.getProperty("umeng.AppKey")
    def storePasswordStr = prop.getProperty("storePassword");
    def keyAliasStr = prop.getProperty("keyAlias");
    def keyPasswordStr = prop.getProperty("keyPassword")


    android {
        //为了解决部分第三方库重复打包了META-INF的问题
        packagingOptions {
            exclude 'META-INF/LICENSE.txt'
            exclude 'META-INF/NOTICE.txt'
        }

        //移除lint检测的error
        lintOptions {
            abortOnError false
            checkReleaseBuilds false
        }

        //签名信息
        signingConfigs {
            releaseConfig {
                keyAlias keyAliasStr
                keyPassword keyPasswordStr
                storeFile file('../key/huoapp_key.jks')
                storePassword storePasswordStr
            }
        }

        buildTypes {
            debug {
                buildConfigField("boolean", "LOG_DEBUG", "true")
                minifyEnabled false
                signingConfig signingConfigs.releaseConfig

            }
            release {
                buildConfigField("boolean", "LOG_DEBUG", "false")
                minifyEnabled true
                zipAlignEnabled true
                //移除无用的resource文件
                shrinkResources true
                proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
                signingConfig signingConfigs.releaseConfig
                // 批量打包
                applicationVariants.all { variant ->
                    variant.outputs.all {
                        outputFileName = "${variant.productFlavors[0].name}_v${defaultConfig.versionName}" +
                                "_${defaultConfig.versionCode}_${releaseTime()}.apk"
                    }
                }
            }
        }

    }
}

def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}